{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["Airtable","require","useAirtable","tableName","apiKey","baseId","useState","records","setRecords","base","useEffect","view","fetchNextPage","record","console","err","fields","id","recordId","deletedRecord","App","createRecord","updateRecord","deleteRecord","map","Status","Name","onClick","ReactDOM","render","document","getElementById"],"mappings":"irCAEA,IAAMA,EAAWC,EAAjB,IAEaC,EAAc,SAACC,EAAWC,EAAQC,GAAW,QAC1BC,mBAD0B,OACjDC,EADiD,KACxCC,EADwC,KAElDC,EAAO,IAAIT,EAAS,CAAEI,WAAf,KAAb,GA+BAM,qBAAU,WA5BRD,kBACU,CAGNE,KAAM,cAJVF,UAOI,SAAcF,EAASK,GAGrBJ,KACAD,WAAgB,SAAUM,GACxBC,wBAAyBD,MAAzBC,YAMFF,OAEF,SAAcG,GACZ,GACED,sBAMVJ,IA0CA,MAAO,CAACH,EAtCa,SAACS,GAAD,OACnBP,EAAA,aAA+B,cAC7B,EACEK,iBAGFA,mBAGiB,SAACG,EAAID,GACxBP,kBACE,CACE,CACEQ,GADF,EAEED,YAGJ,SAAUD,EAAKR,GACb,EACEO,iBAGFP,WAAgB,SAAUM,GACxBC,YAAYD,MAAZC,kBAMa,SAACI,GAAD,OACnBT,EAAA,oBAAgC,SAAUM,EAAKI,GAC7C,EACEL,iBAGFA,qBClCSM,MApCH,KAAO,MAAD,EAC4ClB,EAC1D,QALqB,oBACA,qBAEP,mBACTK,EADS,KACAc,EADA,KACcC,EADd,KAC4BC,EAD5B,KAOhB,OACE,6BACE,6BACGhB,EAAQiB,IAAKX,GACZ,uCACMA,EAAOG,OAAOS,OADpB,aAC+BZ,EAAOG,OAAOU,MAC3C,4BACEC,QAAS,IAAML,EAAaT,EAAOI,GAAI,CAAEQ,OAAQ,iBADnD,UAKA,4BAAQE,QAAS,IAAMJ,EAAaV,EAAOI,KAA3C,aAIN,4BACEU,QAAS,IACPN,EAAa,CACXK,KAAM,OACND,OAAQ,UAJd,mBCtBNG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.196efea1.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst Airtable = require('airtable')\n\nexport const useAirtable = (tableName, apiKey, baseId) => {\n  const [records, setRecords] = useState([])\n  const base = new Airtable({ apiKey }).base(baseId)\n\n  const getRecords = () => {\n    base('Tasks')\n      .select({\n        // Selecting the first 3 records in Grid view:\n        // maxRecords: 3,\n        view: 'Grid view'\n      })\n      .eachPage(\n        function page(records, fetchNextPage) {\n          // This function (`page`) will get called for each page of records.\n\n          setRecords(records)\n          records.forEach(function (record) {\n            console.log('Retrieved', record.get('Name'))\n          })\n\n          // To fetch the next page of records, call `fetchNextPage`.\n          // If there are more records, `page` will get called again.\n          // If there are no more records, `done` will get called.\n          fetchNextPage()\n        },\n        function done(err) {\n          if (err) {\n            console.error(err)\n          }\n        }\n      )\n  }\n\n  useEffect(() => {\n    getRecords()\n  }, [])\n\n  const createRecord = (fields) =>\n    base(tableName).create(fields, (err, record) => {\n      if (err) {\n        console.error(err)\n        return\n      }\n      console.log(record)\n    })\n\n  const updateRecord = (id, fields) => {\n    base('Tasks').update(\n      [\n        {\n          id,\n          fields\n        }\n      ],\n      function (err, records) {\n        if (err) {\n          console.error(err)\n          return\n        }\n        records.forEach(function (record) {\n          console.log(record.get('Status'))\n        })\n      }\n    )\n  }\n\n  const deleteRecord = (recordId) =>\n    base('Tasks').destroy(recordId, function (err, deletedRecord) {\n      if (err) {\n        console.error(err)\n        return\n      }\n      console.log(deletedRecord)\n    })\n\n  return [records, createRecord, updateRecord, deleteRecord]\n}\n","import React from 'react'\nimport { useAirtable } from 'use-airtable'\n\nconst AIRTABLE_API_KEY = 'keyl0A56Sw6XVQcY9'\nconst AIRTABLE_BASE_ID = 'appMulAtpemumqDLV'\n\nconst App = () => {\n  const [records, createRecord, updateRecord, deleteRecord] = useAirtable(\n    'Tasks',\n    AIRTABLE_API_KEY,\n    AIRTABLE_BASE_ID\n  )\n\n  return (\n    <div>\n      <div>\n        {records.map((record) => (\n          <div>\n            {`${record.fields.Status}: ${record.fields.Name}`}\n            <button\n              onClick={() => updateRecord(record.id, { Status: 'In progress' })}\n            >\n              update\n            </button>\n            <button onClick={() => deleteRecord(record.id)}>delete</button>\n          </div>\n        ))}\n      </div>\n      <button\n        onClick={() =>\n          createRecord({\n            Name: 'Name',\n            Status: 'Todo'\n          })\n        }\n      >\n        Create record\n      </button>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}